{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n</div>\\n\\n<h2>All the tasks: </h2>\\n<p><button (click)=\\\"onButtonClickAll($event)\\\">Click to get all tasks</button></p>\\n<p><input #idtext type=\\\"text\\\" name=\\\"id\\\"><button (click)=\\\"onButtonClickOne(idtext.value)\\\">Click to get one task</button></p>\\n<ul>\\n  <li *ngFor='let task of tasks'>\\n    <h2> {{ task['title'] }}</h2>\\n  </li>\\n</ul>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  // Set the attribute tasks to be an array.\n  title = 'Restful Tasks API';\n  tasks = [];\n  constructor(private _httpService: HttpService) { }\n  ngOnInit() {\n    // this.onButtonClick();\n  }\n  getTasksFromService() {\n    const observable = this._httpService.getTasks();\n    observable.subscribe(data => {\n      console.log('Got our tasks!', data);\n\n      this.tasks = data['tasks'];\n      console.log(this.tasks);\n    });\n  }\n  onButtonClickAll(event) {\n    this.getTasksFromService();\n    console.log('Click event is working, event:', event);\n  }\n  getTaskFromService(id) {\n    if (id) {\n      const observable = this._httpService.getTask(id);\n      observable.subscribe(data => {\n        console.log('Got our task!', data);\n        this.tasks = data['data'];\n        console.log(this.tasks);\n      });\n    } else {\n      console.log('Error');\n    }\n  }\n  onButtonClickOne(id: Number): void {\n  this.getTaskFromService(id);\n  console.log('Click event is working, id:', id);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(private _http: HttpClient) {\n\n  }\n  getTasks() {\n    // Remove the lines of code where we make the variable 'tempObservable' and subscribe to it.\n    // tempObservable = this._http.get('/tasks');\n    // tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n    // Return the observable to wherever the getTasks method was invoked.\n    return this._http.get('/tasks');\n  }\n  getTask(id) {\n    // // our http response is an Observable, store it in a variable\n    // const tempObservable = this._http.get('/tasks/' + id + '');\n    // // subscribe to the Observable and provide the code we would like to do with our data from the response\n    // tempObservable.subscribe(data => console.log('Got our task!', data));\n    return this._http.get('/tasks/' + id);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/http.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}