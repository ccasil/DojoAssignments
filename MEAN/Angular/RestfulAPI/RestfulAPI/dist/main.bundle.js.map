{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"#wrapper {\\r\\n    text-align: left;\\r\\n}\\r\\nh1 {\\r\\n    text-align: center;\\r\\n}\\r\\n#top {\\r\\n    display: block;\\r\\n}\\r\\n#bottom {\\r\\n    display: inline-block;\\r\\n    width: 400px;\\r\\n    vertical-align: top;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<h1>{{ title }}</h1>\\r\\n\\r\\n<div id=\\\"wrapper\\\">\\r\\n\\r\\n<div id=\\\"top\\\">\\r\\n  <h2>New Task</h2>\\r\\n  <form (submit)=\\\"onSubmit()\\\">\\r\\n    <p>Title: <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\" /></p>\\r\\n    <p>Description: <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\" /><input type=\\\"submit\\\" value=\\\"Create\\\" /></p>\\r\\n    <!-- use the json pipe to see how newTask changes in real time -->\\r\\n    <p>{{ newTask | json }}</p>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"bottom\\\">\\r\\n  <h2>Task List</h2>\\r\\n  <p><input #idtext type=\\\"text\\\" name=\\\"id\\\"><button (click)=\\\"onButtonClickOne(idtext.value)\\\">Get one task</button></p>\\r\\n  <ul>\\r\\n    <li *ngFor='let task of tasks'>\\r\\n      <h3> {{ task['title'] }} <button (click)=\\\"getTaskFromService(task._id)\\\">Edit</button></h3>\\r\\n        <h4>{{ task['description'] }} <button (click)=\\\"deleteTaskFromService(task._id)\\\">Delete</button></h4>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"bottom\\\">\\r\\n  <div *ngIf = \\\"edit\\\">\\r\\n    <h2>Edit a Task</h2>\\r\\n    <form (submit)=\\\"editSubmit(task._id)\\\">\\r\\n      <p>Title:\\r\\n        <input type=\\\"text\\\" name=\\\"editTask.title\\\" [(ngModel)]=\\\"editTask.title\\\" />\\r\\n      </p>\\r\\n      <p>Description:\\r\\n        <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)]=\\\"editTask.description\\\" />\\r\\n        <input type=\\\"submit\\\" value=\\\"Edit\\\" />\\r\\n      </p>\\r\\n      <!-- use the json pipe to see how editTask changes in real time -->\\r\\n      <p>{{ editTask | json }}</p>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  // Set the attribute tasks to be an array.\r\n  title = 'Restful Tasks API';\r\n  tasks = [];\r\n  task = {};\r\n  newTask: any;\r\n  editTask: any;\r\n  edit = false;\r\n\r\n  constructor(private _httpService: HttpService) { }\r\n  ngOnInit() {\r\n    this.getTasksFromService();\r\n    this.newTask = { title: '', description: '' };\r\n  }\r\n\r\n  getTasksFromService() {\r\n    const observable = this._httpService.getTasks();\r\n    observable.subscribe(data => {\r\n      console.log('Got our tasks!', data);\r\n      this.tasks = data['tasks'];\r\n      console.log('this.tasks', this.tasks);\r\n    });\r\n  }\r\n\r\n  getTaskFromService(id) {\r\n    if (id) {\r\n      const observable = this._httpService.getTask(id);\r\n      observable.subscribe(data => {\r\n        console.log('Got our task!', data);\r\n        this.task = data['tasks'];\r\n        console.log('this.task', this.task);\r\n        console.log('TITLE', this.task['title']);\r\n        this.editTask = { id: this.task['_id'], title: this.task['title'], description: this.task['description'] };\r\n        console.log('this.editTask', this.editTask);\r\n        this.edit = true;\r\n      });\r\n    } else {\r\n      console.log('Error');\r\n    }\r\n  }\r\n\r\n  onButtonClickOne(id: Number): void {\r\n    this.getTaskFromService(id);\r\n    console.log('Click event is working, id:', id);\r\n  }\r\n\r\n  onSubmit() {\r\n    // Code to send off the form data (this.newTask) to the Service\r\n    const observable = this._httpService.addTask(this.newTask);\r\n    observable.subscribe(data => {\r\n      console.log('Got data from post back!', data);\r\n    });\r\n    this.getTasksFromService();\r\n    // Reset this.newTask to a new, clean object.\r\n    this.newTask = { title: '', description: '' };\r\n  }\r\n\r\neditSubmit(id) {\r\n  console.log(id);\r\n  const observable = this._httpService.editTask(id, this.editTask);\r\n  observable.subscribe(data => {\r\n    console.log('Got data from put back!', data);\r\n    this.getTasksFromService();\r\n    this.edit = false;\r\n  });\r\n}\r\n\r\n  deleteTaskFromService(id) {\r\n    const observable =  this._httpService.deleteTask(id);\r\n    observable.subscribe(data => {\r\n      console.log('Removed the task');\r\n      this.getTasksFromService();\r\n      this.task = {};\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpService } from './http.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [HttpService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  constructor(private _http: HttpClient) {\r\n\r\n  }\r\n  getTasks() {\r\n    // Remove the lines of code where we make the variable 'tempObservable' and subscribe to it.\r\n    // tempObservable = this._http.get('/tasks');\r\n    // tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\r\n    // Return the observable to wherever the getTasks method was invoked.\r\n    return this._http.get('/tasks');\r\n  }\r\n  getTask(id) {\r\n    // // our http response is an Observable, store it in a variable\r\n    // const tempObservable = this._http.get('/tasks/' + id + '');\r\n    // // subscribe to the Observable and provide the code we would like to do with our data from the response\r\n    // tempObservable.subscribe(data => console.log('Got our task!', data));\r\n    return this._http.get('/tasks/' + id);\r\n  }\r\n  addTask(newTask) {\r\n    return this._http.post('/tasks', newTask);\r\n  }\r\n  deleteTask(id) {\r\n    return this._http.delete('/tasks/' + id);\r\n  }\r\n  editTask(id, editTask) {\r\n    return this._http.put('/tasks/' + id, editTask);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/http.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}